{"version":3,"sources":["script.js","javascripts/darkmode.js","javascripts/media-player.js","javascripts/navbar.js","javascripts/script.js"],"names":["darkMode","localStorage","getItem","darkModeToggle","document","querySelector","enableDarkMode","body","classList","add","setItem","disableDarkMode","remove","removeItem","addEventListener","console","log","updateTimer","now_playing","track_name","playpause_btn","seek_slider","curr_time","total_duration","curr_track","createElement","track_index","isPlaying","isRandom","music_list","name","artist","music","loadTrack","clearInterval","reset","track","src","load","error","textContent","setInterval","setUpdate","nextTrack","value","playpauseTrack","pauseTrack","playTrack","play","innerHTML","pause","length","random_index","Number","parseInt","Math","random","prevTrack","seekTo","seekto","duration","currentTime","setVolume","volume","volume_slider","seekPosition","isNaN","currentMinutes","floor","currentSeconds","durationMinutes","durationSeconds","toggleButton","getElementsByClassName","navbarLinks","toggle"],"mappings":"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","file":"script.js","sourcesContent":[null,"\nlet darkMode = localStorage.getItem(\"darkMode\");\nconst darkModeToggle = document.querySelector(\"#navbar__dark-mode-toggle\");\n\nconst enableDarkMode = () => {\n  document.body.classList.add('darkmode');\n  localStorage.setItem('darkMode', 'enabled')\n}\n\n\nconst disableDarkMode = () => {\n  document.body.classList.remove('darkmode');\n  localStorage.removeItem('darkMode')\n}\n\nif (darkMode === 'enabled') {\n  enableDarkMode();\n}\n\ndarkModeToggle.addEventListener('click', () => {\n  darkMode = localStorage.getItem('darkMode');\n  if (darkMode !== 'enabled') {\n    enableDarkMode();\n    console.log(darkMode);\n    \n  } else {\n    disableDarkMode();\n    console.log(darkMode);\n\n  }\n\n  // Log the new value of darkMode after toggle\n  console.log('Current darkMode value:', localStorage.getItem('darkMode'));\n})\n\n","\nlet now_playing = document.querySelector('.player__now-playing');\nlet track_name = document.querySelector('.player__track-name');\nlet playpause_btn = document.querySelector('.player__playpause-track');\nlet seek_slider = document.querySelector('.player__seek_slider');\nlet curr_time = document.querySelector('.player__current-time');\nlet total_duration = document.querySelector('.player__total-duration');\nlet curr_track = document.createElement('audio');\n\nlet track_index = 0;\nlet isPlaying = false;\nlet isRandom = false;\nlet updateTimer;\n\nconst music_list = [\n    {\n        name : 'Space Baby',\n        artist : 'Ryan Maguire',\n        music : '../music/Space-Baby.mp3'\n    }\n];\n\n\n\n\n\nfunction loadTrack(track_index){\n  console.log('Loading track at index:', track_index);\n\n  clearInterval(updateTimer);\n  console.log('curr_time', curr_time, 'total_duration', total_duration, 'seek_slider', seek_slider);\n  reset();\n\n  let track = music_list[track_index];\n  console.log('Track to load:', track);\n  console.log('track_name', track.name);\n  \n\n  curr_track.src = track.music;\n  console.log('Audio source set to:', curr_track.src);\n\n  // Try to load the track\n  try {\n      curr_track.load();\n      console.log('Audio file loaded successfully');\n  } catch (error) {\n      console.log('Error loading the audio file:', error);\n  }\n\n  // Log track information\n  track_name.textContent = track.name;\n  console.log('Track name set to:', track_name.textContent);\n\n  // Uncomment the next line if you want to display the artist name\n  // track_artist.textContent = track.artist;\n\n  updateTimer = setInterval(setUpdate, 1000);\n\n  curr_track.addEventListener('ended', nextTrack);\n}\n\nloadTrack(track_index);\n\n\nfunction reset(){\n    curr_time.textContent = \"00:00\";\n    // total_duration.textContent = \"00:00\";\n    seek_slider.value = 0;\n}\n// function randomTrack(){\n//     isRandom ? pauseRandom() : playRandom();\n// }\n// function playRandom(){\n//     isRandom = true;\n//     randomIcon.classList.add('randomActive');\n// }\n// function pauseRandom(){\n//     isRandom = false;\n//     randomIcon.classList.remove('randomActive');\n// }\n// function repeatTrack(){\n//     let current_index = track_index;\n//     loadTrack(current_index);\n//     playTrack();\n// }\n\n\nfunction playpauseTrack(){\n    isPlaying ? pauseTrack() : playTrack();\n}\nfunction playTrack(){\n    curr_track.play();\n    isPlaying = true;\n    playpause_btn.innerHTML = '<i class=\"fa fa-pause-circle fa-5x\"></i>';\n}\nfunction pauseTrack(){\n    curr_track.pause();\n    isPlaying = false;\n    playpause_btn.innerHTML = '<i class=\"fa fa-play-circle fa-5x\"></i>';\n}\n\n\nfunction nextTrack(){\n    if(track_index < music_list.length - 1 && isRandom === false){\n        track_index += 1;\n    }else if(track_index < music_list.length - 1 && isRandom === true){\n        let random_index = Number.parseInt(Math.random() * music_list.length);\n        track_index = random_index;\n    }else{\n        track_index = 0;\n    }\n    loadTrack(track_index);\n    playTrack();\n}\nfunction prevTrack(){\n    if(track_index > 0){\n        track_index -= 1;\n    }else{\n        track_index = music_list.length -1;\n    }\n    loadTrack(track_index);\n    playTrack();\n}\nfunction seekTo(){\n    let seekto = curr_track.duration * (seek_slider.value / 100);\n    curr_track.currentTime = seekto;\n}\nfunction setVolume(){\n    curr_track.volume = volume_slider.value / 100;\n}\nfunction setUpdate(){\n    let seekPosition = 0;\n    if(!isNaN(curr_track.duration)){\n        seekPosition = curr_track.currentTime * (100 / curr_track.duration);\n        seek_slider.value = seekPosition;\n\n        let currentMinutes = Math.floor(curr_track.currentTime / 60);\n        let currentSeconds = Math.floor(curr_track.currentTime - currentMinutes * 60);\n        let durationMinutes = Math.floor(curr_track.duration / 60);\n        let durationSeconds = Math.floor(curr_track.duration - durationMinutes * 60);\n\n        if(currentSeconds < 10) {currentSeconds = \"0\" + currentSeconds; }\n        if(durationSeconds < 10) { durationSeconds = \"0\" + durationSeconds; }\n        if(currentMinutes < 10) {currentMinutes = \"0\" + currentMinutes; }\n        if(durationMinutes < 10) { durationMinutes = \"0\" + durationMinutes; }\n\n        curr_time.textContent = currentMinutes + \":\" + currentSeconds;\n        // total_duration.textContent = durationMinutes + \":\" + durationSeconds;\n    }\n}\n","\nconst toggleButton = document.getElementsByClassName('navbar__toggle-button')[0];\nconst navbarLinks = document.getElementsByClassName('navbar__links')[0];\n\ntoggleButton.addEventListener('click', () => {\n  navbarLinks.classList.toggle('navbar__links--active')\n})","\nconsole.log(\"Hello\");\n"]}